name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint: ## Linting et Tests: Vérifie la qualité du code et exécute les tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Install dependencies
      run: npm ci
    - name: Run linter
      run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Install dependencies
      run: npm ci
    - name: Run tests
      run: npm test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v2
    - name: Build Docker images
      run: docker-compose build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    - name: Deploy with Docker Compose
      run: |
        docker-compose up -d
        sleep 30  # Wait for services to start

    - name: Verify Kong
      run: |
        docker-compose exec -T kong kong health
        curl -I http://localhost:8001 || echo "Kong Admin API is not accessible"
        curl -I http://localhost:8000 || echo "Kong Proxy is not accessible"

    - name: Verify Keycloak
      run: |
        curl -I http://localhost:8180 || echo "Keycloak is not accessible"

    - name: Verify Konga
      run: |
        curl -I http://localhost:1337 || echo "Konga is not accessible"

    - name: Verify Prometheus
      run: |
        curl -I http://localhost:9090 || echo "Prometheus is not accessible"

    - name: Verify Grafana
      run: |
        curl -I http://localhost:3000 || echo "Grafana is not accessible"

  post-deploy-config:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Configure Kong
      run: |
        # Example: Add a service and route to Kong
        curl -i -X POST http://localhost:8001/services \
          --data name=example-service \
          --data url='http://mockbin.org'
        curl -i -X POST http://localhost:8001/services/example-service/routes \
          --data 'paths[]=/example'

    - name: Configure Keycloak
      run: |
        # Example: Create a new realm (you may need to adjust this based on your Keycloak setup)
        curl -X POST http://localhost:8180/auth/admin/realms \
          -H "Content-Type: application/json" \
          -d '{"realm": "example-realm", "enabled": true}'

  performance-test:
    runs-on: ubuntu-latest
    needs: post-deploy-config
    steps:
    - name: Run performance tests
      run: |
        # Install Apache Benchmark
        sudo apt-get update && sudo apt-get install -y apache2-utils
        # Run a simple load test
        ab -n 1000 -c 10 http://localhost:8000/example

  security-scan:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Run OWASP ZAP scan
      uses: zaproxy/action-full-scan@v0.4.0
      with:
        target: 'http://localhost:8000'

  cleanup:
    runs-on: ubuntu-latest
    needs: [performance-test, security-scan]
    if: always()
    steps:
    - name: Cleanup
      run: |
        docker-compose down
        docker system prune -af